import requests
import datetime
from config import API_KEY, BOT_TOKEN
from aiogram import Bot, types
from aiogram.dispatcher import Dispatcher
from aiogram.utils import executor

bot = Bot(token=BOT_TOKEN, parse_mode='HTML')
dp = Dispatcher(bot)


@dp.message_handler(commands=["start"])
async def start_message(message: types.Message):
    await message.reply("–ü—Ä–∏–≤–µ—Ç! –ù–∞–ø–∏—à–∏ –º–Ω–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ –∏ —è –ø—Ä–∏—à–ª—é —Ç–µ–±–µ –ø—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã")


@dp.message_handler()
async def get_weather(message: types.Message):
    code_to_smile = {
        "Clear": "—è—Å–Ω–æ",
        "Rain": "–¥–æ–∂–¥—å",
        "Snow": "—Å–Ω–µ–≥",
        "Clouds": "–æ–±–ª–∞—á–Ω–æ",
        "Thunderstorm": "–≥—Ä–æ–∑–∞"
    }

    try:
        response = requests.get(
            f'https://api.openweathermap.org/data/2.5/weather?q={message.text}&appid={API_KEY}&units=metric&lang=ru'
        )
        data = response.json()

        city = data["name"]
        current_temp = data["main"]["temp"]
        feels_like = data["main"]["feels_like"]
        humidity = data["main"]["humidity"]
        pressure = data["main"]["pressure"]
        sunrise = datetime.datetime.fromtimestamp(data["sys"]["sunrise"])
        sunset = datetime.datetime.fromtimestamp(data["sys"]["sunset"])
        wind = data["wind"]["speed"]

        weather_description = data["weather"][0]["main"]
        if weather_description in code_to_smile:
            wd = code_to_smile[weather_description]
        else:
            wd = ""

        await message.answer(
            f"<b>üåÜ –ì–æ—Ä–æ–¥:</b> {city}\n"
            f"<b>üå° –¢–µ–º–ø–µ—Ä–∞—Ç—Ä–∞:</b> {current_temp}¬∞C, <i>{wd}</i>\n"
            f"<b>üíß –í–ª–∞–∂–Ω–æ—Å—Ç—å –≤–æ–∑–¥—É—Ö–∞:</b> {humidity}%\n"
            f"<b>üéà –î–∞–≤–ª–µ–Ω–∏–µ:</b> {pressure} –º–º.—Ä—Ç.—Å—Ç\n"
            f"<b>üåÖ –í–æ—Å—Ö–æ–¥:</b> {sunrise}\n"
            f"<b>üåÑ –ó–∞–∫–∞—Ç:</b> {sunset}\n"
            f"<b>üí® –°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞:</b> {wind}–º/—Å"
        )
    except:
        await message.reply("–Ø –Ω–µ –∑–Ω–∞—é —Ç–∞–∫–æ–≥–æ –≥–æ—Ä–æ–¥–∞.../")


if __name__ == '__main__':
    executor.start_polling(dp)
